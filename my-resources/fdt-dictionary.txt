



	struct fdtable *fdt;
	fdt = files_fdtable(files);



	#define files_fdtable(files) \
	rcu_dereference_check_fdtable((files), (files)->fdt)



	#define rcu_dereference_check_fdtable(files, fdtfd) \
	rcu_dereference_check((fdtfd), lockdep_is_held(&(files)->file_lock))



	#define rcu_dereference_check(p, c) \
	__rcu_dereference_check((p), __UNIQUE_ID(rcu), \
				(c) || rcu_read_lock_held(), __rcu)



	#define __rcu_dereference_check(p, local, c, space) \
	({ \
		/* Dependency order vs. p above. */ \
		typeof(*p) *local = (typeof(*p) *__force)READ_ONCE(p); \
		RCU_LOCKDEP_WARN(!(c), "suspicious rcu_dereference_check() usage"); \
		rcu_check_sparse(p, space); \
		((typeof(*p) __force __kernel *)(local)); \
	})



